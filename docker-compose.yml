networks:
  certchal-network:

volumes:
  redis_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  qdrant_data:
  minio_data:
  phoenix_data:

services:
  postgres:
    image: postgres:latest
    container_name: certchal-postgres
    networks: [certchal-network]
    restart: unless-stopped
    environment:
      POSTGRES_DB: certchal
      POSTGRES_USER: certchal
      POSTGRES_PASSWORD: certchal
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U certchal -d certchal"]
      interval: 5s
      timeout: 3s
      retries: 30

  adminer:
    image: adminer
    networks: [certchal-network]
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis:latest
    container_name: certchal-redis
    networks: [certchal-network]
    restart: unless-stopped
    command: [
      "redis-server",
      "--save", "60", "1",
      "--loglevel", "warning",
      "--maxmemory", "1gb",
      "--maxmemory-policy", "allkeys-lru"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30

  neo4j:
    image: neo4j:latest
    container_name: certchal-neo4j
    networks: [certchal-network]
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/neo4jpassword
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  qdrant:
    image: qdrant/qdrant:latest
    container_name: certchal-qdrant
    networks: [certchal-network]
    restart: always
    ports:
      - "6333:6333"   # HTTP
      - "6334:6334"   # gRPC
    expose:
      - 6333
      - 6334
      - 6335
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: certchal-minio
    networks: [certchal-network]
    restart: unless-stopped
    ports:
      - "9000:9000"   # S3
      - "9001:9001"   # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live >/dev/null"]
      interval: 5s
      timeout: 3s
      retries: 30

  phoenix:
    image: arizephoenix/phoenix:latest
    container_name: certchal-phoenix
    networks: [certchal-network]
    restart: unless-stopped
    ports:
      - "6006:6006"
      - "4317:4317"
    environment:
      - PHOENIX_WORKING_DIR=/mnt/data
    volumes:
      - phoenix_data:/mnt/data

# Example dependency stitching when app services are added:
#   depends_on:
#     postgres:
#       condition: service_healthy
#     redis:
#       condition: service_healthy
#     neo4j:
#       condition: service_healthy
#     qdrant:
#       condition: service_healthy
#     phoenix:
#       condition: service_healthy
